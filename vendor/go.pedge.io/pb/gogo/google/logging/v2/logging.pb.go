// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: google/logging/v2/logging.proto

package google_logging_v2

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "go.pedge.io/pb/gogo/google/api"
import google_api3 "go.pedge.io/pb/gogo/google/api"
import _ "go.pedge.io/pb/gogo/google/protobuf"
import _ "go.pedge.io/pb/gogo/google/protobuf"
import _ "go.pedge.io/pb/gogo/google/protobuf"
import _ "go.pedge.io/pb/gogo/google/rpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// The parameters to DeleteLog.
type DeleteLogRequest struct {
	// Required. The resource name of the log to delete:
	//
	//     "projects/[PROJECT_ID]/logs/[LOG_ID]"
	//     "organizations/[ORGANIZATION_ID]/logs/[LOG_ID]"
	//
	// `[LOG_ID]` must be URL-encoded. For example,
	// `"projects/my-project-id/logs/syslog"`,
	// `"organizations/1234567890/logs/cloudresourcemanager.googleapis.com%2Factivity"`.
	// For more information about log names, see
	// [LogEntry][google.logging.v2.LogEntry].
	LogName string `protobuf:"bytes,1,opt,name=log_name,json=logName,proto3" json:"log_name,omitempty"`
}

func (m *DeleteLogRequest) Reset()                    { *m = DeleteLogRequest{} }
func (m *DeleteLogRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteLogRequest) ProtoMessage()               {}
func (*DeleteLogRequest) Descriptor() ([]byte, []int) { return fileDescriptorLogging, []int{0} }

func (m *DeleteLogRequest) GetLogName() string {
	if m != nil {
		return m.LogName
	}
	return ""
}

// The parameters to WriteLogEntries.
type WriteLogEntriesRequest struct {
	// Optional. A default log resource name that is assigned to all log entries
	// in `entries` that do not specify a value for `log_name`:
	//
	//     "projects/[PROJECT_ID]/logs/[LOG_ID]"
	//     "organizations/[ORGANIZATION_ID]/logs/[LOG_ID]"
	//
	// `[LOG_ID]` must be URL-encoded. For example,
	// `"projects/my-project-id/logs/syslog"` or
	// `"organizations/1234567890/logs/cloudresourcemanager.googleapis.com%2Factivity"`.
	// For more information about log names, see
	// [LogEntry][google.logging.v2.LogEntry].
	LogName string `protobuf:"bytes,1,opt,name=log_name,json=logName,proto3" json:"log_name,omitempty"`
	// Optional. A default monitored resource object that is assigned to all log
	// entries in `entries` that do not specify a value for `resource`. Example:
	//
	//     { "type": "gce_instance",
	//       "labels": {
	//         "zone": "us-central1-a", "instance_id": "00000000000000000000" }}
	//
	// See [LogEntry][google.logging.v2.LogEntry].
	Resource *google_api3.MonitoredResource `protobuf:"bytes,2,opt,name=resource" json:"resource,omitempty"`
	// Optional. Default labels that are added to the `labels` field of all log
	// entries in `entries`. If a log entry already has a label with the same key
	// as a label in this parameter, then the log entry's label is not changed.
	// See [LogEntry][google.logging.v2.LogEntry].
	Labels map[string]string `protobuf:"bytes,3,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Required. The log entries to write. Values supplied for the fields
	// `log_name`, `resource`, and `labels` in this `entries.write` request are
	// added to those log entries that do not provide their own values for the
	// fields.
	//
	// To improve throughput and to avoid exceeding the
	// [quota limit](/logging/quota-policy) for calls to `entries.write`,
	// you should write multiple log entries at once rather than
	// calling this method for each individual log entry.
	Entries []*LogEntry `protobuf:"bytes,4,rep,name=entries" json:"entries,omitempty"`
	// Optional. Whether valid entries should be written even if some other
	// entries fail due to INVALID_ARGUMENT or PERMISSION_DENIED errors. If any
	// entry is not written, the response status will be the error associated
	// with one of the failed entries and include error details in the form of
	// WriteLogEntriesPartialErrors.
	PartialSuccess bool `protobuf:"varint,5,opt,name=partial_success,json=partialSuccess,proto3" json:"partial_success,omitempty"`
}

func (m *WriteLogEntriesRequest) Reset()                    { *m = WriteLogEntriesRequest{} }
func (m *WriteLogEntriesRequest) String() string            { return proto.CompactTextString(m) }
func (*WriteLogEntriesRequest) ProtoMessage()               {}
func (*WriteLogEntriesRequest) Descriptor() ([]byte, []int) { return fileDescriptorLogging, []int{1} }

func (m *WriteLogEntriesRequest) GetLogName() string {
	if m != nil {
		return m.LogName
	}
	return ""
}

func (m *WriteLogEntriesRequest) GetResource() *google_api3.MonitoredResource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *WriteLogEntriesRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *WriteLogEntriesRequest) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *WriteLogEntriesRequest) GetPartialSuccess() bool {
	if m != nil {
		return m.PartialSuccess
	}
	return false
}

// Result returned from WriteLogEntries.
// empty
type WriteLogEntriesResponse struct {
}

func (m *WriteLogEntriesResponse) Reset()                    { *m = WriteLogEntriesResponse{} }
func (m *WriteLogEntriesResponse) String() string            { return proto.CompactTextString(m) }
func (*WriteLogEntriesResponse) ProtoMessage()               {}
func (*WriteLogEntriesResponse) Descriptor() ([]byte, []int) { return fileDescriptorLogging, []int{2} }

// The parameters to `ListLogEntries`.
type ListLogEntriesRequest struct {
	// Deprecated. One or more project identifiers or project numbers from which
	// to retrieve log entries.  Example: `"my-project-1A"`. If
	// present, these project identifiers are converted to resource format and
	// added to the list of resources in `resourceNames`. Callers should use
	// `resourceNames` rather than this parameter.
	ProjectIds []string `protobuf:"bytes,1,rep,name=project_ids,json=projectIds" json:"project_ids,omitempty"`
	// Required. One or more cloud resources from which to retrieve log
	// entries:
	//
	//     "projects/[PROJECT_ID]"
	//     "organizations/[ORGANIZATION_ID]"
	//
	// Projects listed in the `project_ids` field are added to this list.
	ResourceNames []string `protobuf:"bytes,8,rep,name=resource_names,json=resourceNames" json:"resource_names,omitempty"`
	// Optional. A filter that chooses which log entries to return.  See [Advanced
	// Logs Filters](/logging/docs/view/advanced_filters).  Only log entries that
	// match the filter are returned.  An empty filter matches all log entries.
	// The maximum length of the filter is 20000 characters.
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// Optional. How the results should be sorted.  Presently, the only permitted
	// values are `"timestamp asc"` (default) and `"timestamp desc"`. The first
	// option returns entries in order of increasing values of
	// `LogEntry.timestamp` (oldest first), and the second option returns entries
	// in order of decreasing timestamps (newest first).  Entries with equal
	// timestamps are returned in order of `LogEntry.insertId`.
	OrderBy string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	// Optional. The maximum number of results to return from this request.
	// Non-positive values are ignored.  The presence of `nextPageToken` in the
	// response indicates that more results might be available.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. If present, then retrieve the next batch of results from the
	// preceding call to this method.  `pageToken` must be the value of
	// `nextPageToken` from the previous response.  The values of other method
	// parameters should be identical to those in the previous call.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (m *ListLogEntriesRequest) Reset()                    { *m = ListLogEntriesRequest{} }
func (m *ListLogEntriesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListLogEntriesRequest) ProtoMessage()               {}
func (*ListLogEntriesRequest) Descriptor() ([]byte, []int) { return fileDescriptorLogging, []int{3} }

func (m *ListLogEntriesRequest) GetProjectIds() []string {
	if m != nil {
		return m.ProjectIds
	}
	return nil
}

func (m *ListLogEntriesRequest) GetResourceNames() []string {
	if m != nil {
		return m.ResourceNames
	}
	return nil
}

func (m *ListLogEntriesRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListLogEntriesRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *ListLogEntriesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListLogEntriesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Result returned from `ListLogEntries`.
type ListLogEntriesResponse struct {
	// A list of log entries.
	Entries []*LogEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	// If there might be more results than appear in this response, then
	// `nextPageToken` is included.  To get the next set of results, call this
	// method again using the value of `nextPageToken` as `pageToken`.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (m *ListLogEntriesResponse) Reset()                    { *m = ListLogEntriesResponse{} }
func (m *ListLogEntriesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListLogEntriesResponse) ProtoMessage()               {}
func (*ListLogEntriesResponse) Descriptor() ([]byte, []int) { return fileDescriptorLogging, []int{4} }

func (m *ListLogEntriesResponse) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *ListLogEntriesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// The parameters to ListMonitoredResourceDescriptors
type ListMonitoredResourceDescriptorsRequest struct {
	// Optional. The maximum number of results to return from this request.
	// Non-positive values are ignored.  The presence of `nextPageToken` in the
	// response indicates that more results might be available.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. If present, then retrieve the next batch of results from the
	// preceding call to this method.  `pageToken` must be the value of
	// `nextPageToken` from the previous response.  The values of other method
	// parameters should be identical to those in the previous call.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (m *ListMonitoredResourceDescriptorsRequest) Reset() {
	*m = ListMonitoredResourceDescriptorsRequest{}
}
func (m *ListMonitoredResourceDescriptorsRequest) String() string { return proto.CompactTextString(m) }
func (*ListMonitoredResourceDescriptorsRequest) ProtoMessage()    {}
func (*ListMonitoredResourceDescriptorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorLogging, []int{5}
}

func (m *ListMonitoredResourceDescriptorsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListMonitoredResourceDescriptorsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Result returned from ListMonitoredResourceDescriptors.
type ListMonitoredResourceDescriptorsResponse struct {
	// A list of resource descriptors.
	ResourceDescriptors []*google_api3.MonitoredResourceDescriptor `protobuf:"bytes,1,rep,name=resource_descriptors,json=resourceDescriptors" json:"resource_descriptors,omitempty"`
	// If there might be more results than appear in this response, then
	// `nextPageToken` is included.  To get the next set of results, call this
	// method again using the value of `nextPageToken` as `pageToken`.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (m *ListMonitoredResourceDescriptorsResponse) Reset() {
	*m = ListMonitoredResourceDescriptorsResponse{}
}
func (m *ListMonitoredResourceDescriptorsResponse) String() string { return proto.CompactTextString(m) }
func (*ListMonitoredResourceDescriptorsResponse) ProtoMessage()    {}
func (*ListMonitoredResourceDescriptorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorLogging, []int{6}
}

func (m *ListMonitoredResourceDescriptorsResponse) GetResourceDescriptors() []*google_api3.MonitoredResourceDescriptor {
	if m != nil {
		return m.ResourceDescriptors
	}
	return nil
}

func (m *ListMonitoredResourceDescriptorsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*DeleteLogRequest)(nil), "google.logging.v2.DeleteLogRequest")
	proto.RegisterType((*WriteLogEntriesRequest)(nil), "google.logging.v2.WriteLogEntriesRequest")
	proto.RegisterType((*WriteLogEntriesResponse)(nil), "google.logging.v2.WriteLogEntriesResponse")
	proto.RegisterType((*ListLogEntriesRequest)(nil), "google.logging.v2.ListLogEntriesRequest")
	proto.RegisterType((*ListLogEntriesResponse)(nil), "google.logging.v2.ListLogEntriesResponse")
	proto.RegisterType((*ListMonitoredResourceDescriptorsRequest)(nil), "google.logging.v2.ListMonitoredResourceDescriptorsRequest")
	proto.RegisterType((*ListMonitoredResourceDescriptorsResponse)(nil), "google.logging.v2.ListMonitoredResourceDescriptorsResponse")
}

func init() { proto.RegisterFile("google/logging/v2/logging.proto", fileDescriptorLogging) }

var fileDescriptorLogging = []byte{
	// 805 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x41, 0x8f, 0xdb, 0x44,
	0x14, 0xd6, 0x24, 0xbb, 0xdb, 0x64, 0x42, 0x77, 0xd3, 0xa1, 0x9b, 0x75, 0x93, 0x96, 0x35, 0xae,
	0x4a, 0xdc, 0x48, 0xb5, 0x85, 0x51, 0x25, 0x1a, 0xc4, 0x65, 0xd9, 0x0a, 0x21, 0xa5, 0x68, 0xe5,
	0x45, 0x45, 0xe2, 0x12, 0x39, 0xce, 0xab, 0x35, 0xd4, 0xf6, 0x98, 0x99, 0x71, 0x96, 0x14, 0x71,
	0xe9, 0x81, 0x3f, 0xc0, 0xbf, 0xe0, 0xc0, 0xbf, 0xe0, 0xca, 0x85, 0x0b, 0x57, 0x24, 0x7e, 0x04,
	0x47, 0x34, 0xf6, 0x38, 0xcd, 0x26, 0x61, 0x37, 0xf4, 0x36, 0xf3, 0xde, 0xf7, 0xe6, 0x7d, 0xef,
	0x7b, 0x6f, 0x1e, 0x3e, 0x8e, 0x18, 0x8b, 0x62, 0x70, 0x63, 0x16, 0x45, 0x34, 0x8d, 0xdc, 0x99,
	0x57, 0x1d, 0x9d, 0x8c, 0x33, 0xc9, 0xc8, 0xad, 0x12, 0xe0, 0x54, 0xd6, 0x99, 0xd7, 0xbd, 0xab,
	0x63, 0x82, 0x8c, 0xba, 0x41, 0x9a, 0x32, 0x19, 0x48, 0xca, 0x52, 0x51, 0x06, 0x74, 0xef, 0x2f,
	0x79, 0x13, 0x96, 0x52, 0xc9, 0x38, 0x4c, 0xc7, 0x1c, 0x04, 0xcb, 0x79, 0x08, 0x1a, 0xf4, 0xfe,
	0xc6, 0xb4, 0x63, 0x48, 0x25, 0x9f, 0x6b, 0xc8, 0x7b, 0x1a, 0x52, 0xdc, 0x26, 0xf9, 0x0b, 0x77,
	0x9a, 0xf3, 0x22, 0x91, 0xf6, 0xf7, 0x56, 0xfd, 0x90, 0x64, 0xb2, 0x0a, 0x3e, 0x5e, 0x75, 0x4a,
	0x9a, 0x80, 0x90, 0x41, 0x92, 0x69, 0xc0, 0x91, 0x06, 0xf0, 0x2c, 0x74, 0x85, 0x0c, 0x64, 0xae,
	0xe9, 0x5b, 0x8f, 0x70, 0xfb, 0x14, 0x62, 0x90, 0x30, 0x62, 0x91, 0x0f, 0xdf, 0xe5, 0x20, 0x24,
	0xb9, 0x83, 0x1b, 0x8a, 0x5d, 0x1a, 0x24, 0x60, 0x20, 0x13, 0xd9, 0x4d, 0xff, 0x46, 0xcc, 0xa2,
	0x2f, 0x83, 0x04, 0xac, 0x3f, 0x6b, 0xb8, 0xf3, 0x35, 0xa7, 0x05, 0xfc, 0x69, 0x2a, 0x39, 0x05,
	0x71, 0x7d, 0x14, 0x79, 0x82, 0x1b, 0x95, 0x20, 0x46, 0xcd, 0x44, 0x76, 0xcb, 0xbb, 0xe7, 0x68,
	0x9d, 0x83, 0x8c, 0x3a, 0xcf, 0x2a, 0xd9, 0x7c, 0x0d, 0xf2, 0x17, 0x70, 0xf2, 0x0c, 0xef, 0xc5,
	0xc1, 0x04, 0x62, 0x61, 0xd4, 0xcd, 0xba, 0xdd, 0xf2, 0x1e, 0x3b, 0x6b, 0x0d, 0x72, 0x36, 0x13,
	0x72, 0x46, 0x45, 0x9c, 0x32, 0xce, 0x7d, 0xfd, 0x08, 0x79, 0x8c, 0x6f, 0x40, 0x89, 0x32, 0x76,
	0x8a, 0xf7, 0x7a, 0x1b, 0xde, 0xd3, 0x4f, 0xcd, 0xfd, 0x0a, 0x4b, 0xfa, 0xf8, 0x20, 0x0b, 0xb8,
	0xa4, 0x41, 0x3c, 0x16, 0x79, 0x18, 0x82, 0x10, 0xc6, 0xae, 0x89, 0xec, 0x86, 0xbf, 0xaf, 0xcd,
	0xe7, 0xa5, 0xb5, 0xfb, 0x04, 0xb7, 0x96, 0xd2, 0x92, 0x36, 0xae, 0xbf, 0x84, 0xb9, 0x96, 0x43,
	0x1d, 0xc9, 0x6d, 0xbc, 0x3b, 0x0b, 0xe2, 0xbc, 0xd4, 0xa1, 0xe9, 0x97, 0x97, 0x61, 0xed, 0x63,
	0x64, 0xdd, 0xc1, 0x47, 0x6b, 0x85, 0x88, 0x8c, 0xa5, 0x02, 0xac, 0xdf, 0x11, 0x3e, 0x1c, 0x51,
	0x21, 0xd7, 0x45, 0x3f, 0xc6, 0xad, 0x8c, 0xb3, 0x6f, 0x21, 0x94, 0x63, 0x3a, 0x15, 0x06, 0x32,
	0xeb, 0x76, 0xd3, 0xc7, 0xda, 0xf4, 0xc5, 0x54, 0x90, 0x07, 0x78, 0xbf, 0xd2, 0xb2, 0x68, 0x8d,
	0x30, 0x1a, 0x05, 0xe6, 0x66, 0x65, 0x55, 0x0d, 0x12, 0xa4, 0x83, 0xf7, 0x5e, 0xd0, 0x58, 0x02,
	0xd7, 0xbc, 0xf4, 0x4d, 0x35, 0x95, 0xf1, 0x29, 0xf0, 0xf1, 0x64, 0x6e, 0xd4, 0xcb, 0xa6, 0x16,
	0xf7, 0x93, 0x39, 0xe9, 0xe1, 0x66, 0x16, 0x44, 0x30, 0x16, 0xf4, 0x15, 0x18, 0x3b, 0x26, 0xb2,
	0x77, 0xfd, 0x86, 0x32, 0x9c, 0xd3, 0x57, 0x40, 0xee, 0x61, 0x5c, 0x38, 0x25, 0x7b, 0x09, 0x69,
	0xa1, 0x55, 0xd3, 0x2f, 0xe0, 0x5f, 0x29, 0x83, 0x75, 0x81, 0x3b, 0xab, 0xf5, 0x94, 0xa5, 0x2e,
	0x37, 0x08, 0xfd, 0x8f, 0x06, 0x7d, 0x80, 0x0f, 0x52, 0xf8, 0x5e, 0x8e, 0x97, 0x92, 0x96, 0x85,
	0xdc, 0x54, 0xe6, 0xb3, 0x45, 0x62, 0xc0, 0x7d, 0x95, 0x78, 0x6d, 0xe2, 0x4e, 0x41, 0x84, 0x9c,
	0x66, 0x92, 0xf1, 0x85, 0xb4, 0x97, 0xea, 0x43, 0x57, 0xd6, 0x57, 0x5b, 0xad, 0xef, 0x57, 0x84,
	0xed, 0xeb, 0xf3, 0xe8, 0x92, 0xbf, 0xc1, 0xb7, 0x17, 0x2d, 0x9a, 0xbe, 0xf1, 0xeb, 0xfa, 0xfb,
	0x57, 0xfe, 0x94, 0x37, 0xef, 0xf9, 0xef, 0xf2, 0xf5, 0x1c, 0xdb, 0xea, 0xe2, 0xfd, 0xb5, 0x83,
	0xdb, 0xa3, 0x52, 0xe0, 0x73, 0xe0, 0x33, 0x1a, 0xc2, 0x73, 0x8f, 0x5c, 0xe0, 0xe6, 0x62, 0x37,
	0x90, 0xfb, 0x1b, 0xfa, 0xb0, 0xba, 0x39, 0xba, 0x9d, 0x0a, 0x54, 0x2d, 0x22, 0xe7, 0xa9, 0xda,
	0x52, 0xd6, 0xa3, 0xd7, 0x7f, 0xfc, 0xfd, 0x73, 0xad, 0x3f, 0x78, 0xe0, 0xce, 0xbc, 0x09, 0xc8,
	0xe0, 0x43, 0xf7, 0x87, 0x6a, 0x57, 0x7c, 0xaa, 0x87, 0x55, 0xb8, 0x03, 0xb5, 0x13, 0x85, 0x3b,
	0xf8, 0x91, 0xfc, 0x84, 0xf0, 0xc1, 0xca, 0x5f, 0x20, 0x0f, 0xb7, 0xfe, 0xf8, 0xdd, 0xc1, 0x36,
	0x50, 0xfd, 0xb5, 0xee, 0x16, 0xcc, 0x3a, 0xd6, 0x2d, 0xb5, 0x93, 0xf5, 0x34, 0x0d, 0x2f, 0x14,
	0x78, 0x88, 0x06, 0xe4, 0x35, 0xc2, 0xfb, 0x97, 0x07, 0x95, 0xd8, 0x9b, 0xe6, 0x71, 0xd3, 0xdf,
	0xec, 0x3e, 0xdc, 0x02, 0xa9, 0x59, 0xf4, 0x0a, 0x16, 0x87, 0x56, 0x7b, 0x99, 0x45, 0x4c, 0x85,
	0x54, 0x24, 0x7e, 0x43, 0xd8, 0xbc, 0x6e, 0x98, 0xc8, 0xf0, 0x3f, 0x92, 0x6d, 0x31, 0xe9, 0xdd,
	0x4f, 0xde, 0x2a, 0x56, 0x53, 0xb7, 0x0b, 0xea, 0x16, 0x31, 0x15, 0xf5, 0xe4, 0x8a, 0x88, 0x93,
	0x53, 0x7c, 0x18, 0xb2, 0x64, 0x3d, 0xd7, 0xc9, 0x3b, 0x7a, 0xf2, 0xce, 0xd4, 0xd0, 0x9c, 0xa1,
	0x7f, 0x10, 0xfa, 0xa5, 0x76, 0xf4, 0x79, 0x09, 0xfb, 0x2c, 0x66, 0xf9, 0xd4, 0xd1, 0x00, 0xe7,
	0xb9, 0x37, 0xd9, 0x2b, 0x46, 0xeb, 0xa3, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x74, 0x3f, 0xa5,
	0x57, 0xca, 0x07, 0x00, 0x00,
}
